# Ping-Point

**Ping-Point** — утилита для проверки доступности веб-эндпоинтов. Она позволяет автоматически анализировать статус-коды веб-ресурсов, чтобы определить доступные ресурсы из списка эндпоинтов. Утилита поддерживает асинхронность и многопоточность, что обеспечивает её высокую производительность и гибкость в использовании.

### Основные возможности

Ping-Point предназначена для автоматизации процесса проверки веб-эндпоинтов. Используйте её для получения статусов HTTP/HTTPS запросов, чтобы быстро и эффективно понять, какие ресурсы доступны. Утилита поддерживает работу через прокси-серверы и использование случайных `User-Agent` заголовков, что позволяет обходить ограничения и эмулировать разные типы клиентов.

### Сборка проекта

Для сборки проекта выполните следующую команду в корне проекта:

```bash
cargo build --release
```

### Использование

Запустите утилиту с использованием следующих флагов и параметров:

- `-u, --url <URL>`: Базовый URL-адрес, к которому будут добавляться эндпоинты.
- `-e, --endpoint <endpoint>`: Путь к файлу `.txt`, содержащему список эндпоинтов, или эндпоинт в виде строки (без `/` в начале).
- `-t, --threads <threads>`: Количество потоков для многопоточной проверки.
- `--random-agent`: Использование случайного `User-Agent` для каждого запроса.
- `-p, --proxy <proxy>`: URL-адрес прокси-сервера для отправки запросов через него.

### Примеры использования

1. Проверка эндпоинтов из файла `endpoints.txt` с использованием 10 потоков:
   ```bash
   ping-point -u https://example.com -e endpoints.txt -t 10
   ```

2. Использование случайного `User-Agent` и прокси:
   ```bash
   ping-point -u https://example.com -e endpoints.txt -t 10 --random-agent -p http://proxy.example.com:8080
   ```

### Особенности

- **Асинхронность и многопоточность**: Ping-Point использует асинхронные функции и поддержку многопоточности, что позволяет запускать большое количество запросов одновременно, сокращая время проверки больших списков эндпоинтов.
- **Поддержка прокси и случайных заголовков**: Утилита может использовать прокси-серверы и эмулировать разные `User-Agent`, что помогает обходить ограничения серверов и тестировать ресурсы в разных условиях.



### Замечания по использованию

- **Ответственность за использование**: Используйте утилиту с соблюдением законодательства и этических норм. Применяйте её только на тех ресурсах, для которых у вас есть разрешение, или в тестовых средах.
